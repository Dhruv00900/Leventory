import React, { useEffect, useState, useRef } from "react";
import { useParams, useNavigate } from "react-router-dom";
import axios from "axios";
import Modal from "react-modal";
import { toast } from "react-toastify";
import jsPDF from "jspdf";
import html2canvas from "html2canvas";

Modal.setAppElement("#root");

const UserTransactions = () => {
  const { generatedBy } = useParams();
  const navigate = useNavigate();
  const [transactions, setTransactions] = useState([]);
  const [selectedBill, setSelectedBill] = useState(null);
  const billRef = useRef();
  const API = process.env.REACT_APP_API_URL;

  const fetchTransactions = async () => {
    try {
      const token = localStorage.getItem("token");
      if (!token) return toast.error("‚ùå No token found!");

      const { data } = await axios.get(
        `${API}/api/bills/generated-by/${generatedBy}`,
        {
          headers: { Authorization: `Bearer ${token}` },
        }
      );
      setTransactions(data);
    } catch (error) {
      console.error("Error fetching transactions:", error);
      toast.error("Failed to load transactions.");
    }
  };

  const openBill = async (id) => {
    try {
      const token = localStorage.getItem("token");
      const { data } = await axios.get(`${API}/api/bills/${id}`, {
        headers: { Authorization: `Bearer ${token}` },
      });
      setSelectedBill(data);
    } catch (error) {
      toast.error("Failed to load bill.");
    }
  };

  const handlePrint = () => {
    window.print();
  };

  const handleDownloadPDF = async () => {
    const canvas = await html2canvas(billRef.current);
    const imgData = canvas.toDataURL("image/png");
    const pdf = new jsPDF();
    const width = pdf.internal.pageSize.getWidth();
    const height = (canvas.height * width) / canvas.width;
    pdf.addImage(imgData, "PNG", 0, 0, width, height);
    pdf.save("invoice.pdf");
  };

  useEffect(() => {
    fetchTransactions();
  }, [generatedBy]);

  const calculateTotal = () =>
    selectedBill.products.reduce((acc, item) => acc + item.quantity * item.price, 0);

  return (
    <div className="transaction-page">
      <button className="back-btn" onClick={() => navigate(-1)}>‚¨Ö Back</button>
      <h2>Transactions Generated by <strong>{generatedBy}</strong></h2>

      {transactions.length === 0 ? (
        <p>No transactions found for this user.</p>
      ) : (
        <table className="transaction-table">
          <thead>
            <tr>
              <th>Invoice No</th>
              <th>Date</th>
              <th>Customer</th>
              <th>Items</th>
              <th>Total Amount</th>
              <th></th>
            </tr>
          </thead>
          <tbody>
            {transactions.map((tx) => (
              <tr key={tx._id}>
                <td>{tx.invoiceNumber}</td>
                <td>{new Date(tx.date).toLocaleString()}</td>
                <td>{tx.customerName}</td>
                <td>
                  {tx.products.map((item, i) => (
                    <div key={i}>{item.name} x {item.quantity}</div>
                  ))}
                </td>
                <td>‚Çπ{tx.totalAmount}</td>
                <td>
                  <button
                    onClick={() => openBill(tx._id)}
                    style={{
                      padding: "5px 10px",
                      background: "#4CAF50",
                      color: "white",
                      border: "none",
                      borderRadius: "5px",
                      cursor: "pointer",
                    }}
                  >
                    Show Bill
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      )}

      {/* Modal for Bill */}
      <Modal
  isOpen={!!selectedBill}
  onRequestClose={() => setSelectedBill(null)}
  style={{
    overlay: {
      backgroundColor: "rgba(0, 0, 0, 0.5)",
      zIndex: 1000,
    },
    content: {
      maxWidth: "500px",
      maxHeight: "90vh",
      overflowY: "auto",
      margin: "auto",
      padding: "30px",
      borderRadius: "12px",
      border: "none",
      boxShadow: "0 10px 25px rgba(0,0,0,0.2)",
    },
  }}
>
  {selectedBill && (
    <div className="bill-container" ref={billRef}>
      {/* Close Button */}
      <button
        onClick={() => setSelectedBill(null)}
        style={{
          position: "absolute",
          top: "15px",
          right: "20px",
          background: "transparent",
          border: "none",
          fontSize: "20px",
          cursor: "pointer",
          color: "#999",
        }}
        aria-label="Close"
      >
        &times;
      </button>

      <div style={{
        background: "#fff", fontFamily: "monospace", fontSize: "14px",
        borderRadius: "10px", padding: "20px",
      }}>
        <div style={{ textAlign: "center", marginBottom: "10px" }}>
          <h3 style={{ margin: 0 }}>Inventory System</h3>
          <p style={{ margin: 0 }}>Algari Trading - Rajkot, Gujarat</p>
          <p style={{ margin: "5px 0" }}>Tel: 0281-22773000</p>
          <strong>Invoice</strong>
        </div>

        <div>
          <p><strong>Customer:</strong> {selectedBill.customerName}</p>
          <p><strong>Phone:</strong> {selectedBill.customerPhone}</p>
          <p><strong>Date:</strong> {new Date(selectedBill.date).toLocaleString()}</p>
          <p><strong>Generated By:</strong> {selectedBill.generatedBy}</p>
        </div>

        <hr />
        <table style={{ width: "100%", textAlign: "left", marginBottom: "10px" }}>
          <thead>
            <tr style={{ borderBottom: "1px solid #ccc" }}>
              <th>Item</th>
              <th>Qty</th>
              <th>Price</th>
              <th>Total</th>
            </tr>
          </thead>
          <tbody>
            {selectedBill.products.map((item, idx) => (
              <tr key={idx}>
                <td>{item.name}</td>
                <td>{item.quantity}</td>
                <td>Rs.{item.price}</td>
                <td>Rs.{item.price * item.quantity}</td>
              </tr>
            ))}
          </tbody>
        </table>
        <hr />
        <p style={{ textAlign: "right" }}>
          <strong>Grand Total: Rs.{calculateTotal()}</strong>
        </p>
        <hr />
        <p style={{ textAlign: "center", fontStyle: "italic" }}>
          Thank you for your purchase!
        </p>
      </div>

      <div style={{ display: "flex", justifyContent: "center", gap: "10px", marginTop: "20px" }}>
        <button
          onClick={handlePrint}
          style={{
            padding: "8px 16px",
            backgroundColor: "#007bff",
            color: "white",
            border: "none",
            borderRadius: "6px",
            cursor: "pointer",
          }}
        >
          üñ®Ô∏è Print
        </button>
        <button
          onClick={handleDownloadPDF}
          style={{
            padding: "8px 16px",
            backgroundColor: "#28a745",
            color: "white",
            border: "none",
            borderRadius: "6px",
            cursor: "pointer",
          }}
        >
          ‚¨áÔ∏è Download PDF
        </button>
      </div>
    </div>
  )}
</Modal>


    </div>
  );
};

export default UserTransactions;
